:root {
  --card-width-350px: 100%;
  --card-width-390px: 50%;
  --card-width-600px: 70px;
  --card-width-1200px: 100px;
  --card-width-1600px: 150px;
  --card-height-350px: 100%;
  --card-height-390px: 70px;
  --card-height-600px: 90px;
  --card-height-1200px: 150px;
  --card-height-1600px: 200px;
  --card-gap-350px: 1%;
  --card-gap-390px: 5px;
  --card-gap-450px: 10px;
  --card-gap-600px: 10px;
  --card-gap-1200px: 15px;
  --stock-borderRadius-350px: 0.25em;
  --stock-borderRadius-900px: 10px;
  --stock-borderRadius-1600px: 10px;
  --minHeight-messageContainer-350px: 80px;
  --minHeight-messageContainer-700px: 25px;
  --minHeight-messageContainer-1600px: 20px;
  --modal-content-width: 15.62em;
  --modal-content-height: 9.37em;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  width: 100vw;
  height: 100vh;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  width: 100%;
  height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill="none"], [fill^="url"])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke="none"], [stroke^="url"])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* html {
  user-select: none;
  min-height: 100vh;
} */

body {
  user-select: none;
  /* font-size: 14px; */
  /* box-sizing: border-box; */
  touch-action: manipulation;
  /* background-color: #3b0763; */
  color: white;
  overflow: hidden;
  /* justify-content: center; */
  /* align-items: center; */
  background: url("../assets/shop/fons/fon_4.jpg") no-repeat center center fixed;
  /* background-color: #333;
  background-image: repeating-linear-gradient(
    0deg,
    rgba(255, 255, 255, 0.05),
    rgba(255, 255, 255, 0.05) 1px,
    transparent 1px,
    transparent 5px
  ); */
}

.full-screen-button {
  position: absolute;
  margin: 0.5em;
  z-index: 2;
}

.info-container {
  margin-top: 1.5em;
  width: 100%;
}

.modal {
  position: fixed;
  z-index: 1;
  cursor: pointer;
  text-align: center;
  width: 100%;
  height: 100%;
  background: rgba(161, 13, 13, 0.8);
}

.modal-content {
  position: absolute;
  top: calc(50% - (var(--modal-content-height) / 2));
  left: calc(50% - (var(--modal-content-width) / 2));
  width: var(--modal-content-width);
  height: var(--modal-content-height);
}

.name-h2 {
  color: #22e44c;
}

input {
  /* font-size: 16px; */
  margin: 0.6em;
  padding: 0.6em;
}

.modal-buttons {
  display: flex;
  gap: 0.6em;
  margin-top: 0.3em;
  justify-content: center;
}

#message,
.points-game {
  font-size: 1.25rem;
  text-align: center;
  padding: 0.6em;
  margin: 0.6em;
  color: black;
}

.game-interface {
  margin: 0px 0.2em;
  height: 100%;
}

#game-container {
  margin: 0.5em 0.2em;
  text-align: center;
  align-items: center;
  height: 40%;
  box-sizing: border-box;
}

.row-1,
.row-2 {
  position: relative;
  display: flex;
  justify-content: space-between;
  margin: 0.6em 0px 3.12em;
  box-sizing: border-box;
  width: 100%;
  height: 25%;
  left: 50%;
  transform: translateX(-50%);
}

.row-a,
.row-b {
  display: flex;
  justify-content: space-between;
}

.row-a {
  width: calc((100% / 7) * 2);
  height: 100%;
}

.row-b {
  width: calc((100% / 7) * 4);
}

#controls {
  display: flex;
  justify-content: center;
  gap: 1em;
  padding: 0.6em;
  flex-wrap: wrap;
  margin-bottom: 1.25em;
  margin-top: 50vh;
}

.controls-btn {
  color: black;
}

.stock,
.card-waste,
.foundation,
.card,
.card-placeholder {
  height: 100%;
  border-radius: var(--stock-borderRadius-350px);
  box-sizing: border-box;
}

.stock {
  cursor: pointer;
  border: 0.06em solid black;
}

.card-placeholder,
.foundation,
.card-waste {
  position: relative;
  border: 0.15em dashed rgb(255, 255, 255);
}

.card {
  position: absolute;
  background: white;
  /* background: #475749;
  color: white;
  box-shadow: 0 0 10px rgba(255,255,255,0.1); */
  /* display: flex; */
  /* align-items: center; */
  /* justify-content: center; */
  /* font-size: 4vw; */
  font-weight: bold;
  box-shadow: 0.06em 0.06em 0.18em rgba(0, 0, 0, 0.3);
  box-sizing: border-box;
  cursor: pointer;
  transition: transform 0.2s;
  user-select: none;
  border: 0.06em solid black;
}

.top-left {
  position: absolute;
  box-sizing: border-box;
  text-align: left;
  left: 5%;
  top: -5%;
}

.center {
  position: absolute;
  box-sizing: border-box;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 1.9em;
}

.bottom-right {
  position: absolute;
  box-sizing: border-box;
  text-align: right;
  right: 5%;
  bottom: -5%;
  transform: rotate(180deg);
}

.card.red {
  color: red;
}

.card.black {
  color: black;
}

.card-faceUp {
  background-color: #a8c5c4;
  background-image: linear-gradient(
    90deg,
    rgba(139, 69, 19, 0.1) 0%,
    transparent 50%,
    rgba(139, 69, 19, 0.1) 100%
  );
  border: 0.12em solid #0b0b0b;
  /* color: #5a3921; */
  font-weight: bold;
}

.card-back,
.stock {
  background: repeating-linear-gradient(
    45deg,
    #1a5a1a,
    #1a5a1a 0.3em,
    #165016 0.3em,
    #165016 0.6em
  );
  color: transparent !important;
}

button {
  padding: 0.37em 0.5em;
  font-size: 1.25em;
  cursor: pointer;
  background-color: #4caf50;
  color: white;
  border: 0.06em solid black;
  border-radius: 0.25em;
  box-shadow: 0 0.12em 0.31em rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s;
}

button:hover {
  background-color: #45a049;
}

button:active {
  transform: scale(0.98);
}

@media (min-width: 350px) {
  .points-game,
  #message {
    padding: 0.31em;
    margin: 0.12em;
  }

  #message {
    min-height: var(--minHeight-messageContainer-350px);
  }

  .info-container {
    margin-top: 0.3em;
  }

  .row-1,
  .row-2 {
    margin: 0.6em 0px 1.25em;
  }

  /* .row-2 {
    gap: var(--card-gap-350px);
  } */

  /* .row-1 {
    gap: calc(var(--card-width-350px) / 2 + var(--card-gap-390px) * 2);
  } */

  .stock,
  .card-waste {
    width: 50%;
  }

  .card-placeholder,
  .foundation {
    width: calc(100% / 4);
  }

  /* .card-placeholder, */
  /* .foundation, */
  .card {
    width: calc(var(--card-width-350px) + var(--stock-borderRadius-350px));
    height: calc(var(--card-height-350px) + var(--stock-borderRadius-350px));
  }

  #controls {
    margin-top: 65%;
  }

  .center {
    font-size: 2em;
  }

  /* .row-a,
  .row-b {
    gap: var(--card-gap-350px);
  } */
}

@media (min-width: 358px) {
    #controls {
    margin-top: 33vh;
  }
}

@media (min-width: 450px) {
  .row-1,
  .row-2 {
    height: 30%;
  }
}
/* @media (min-width: 450px) {
  .row-1,
  .row-2 {
    margin: 10px 0px 30px;
  }

  .row-2 {
    gap: var(--card-gap-450px);
  }

  .row-1 {
    gap: calc(var(--card-width-390px) + var(--card-gap-450px) * 2);
  }

  .stock,
  .card-placeholder,
  .foundation,
  .card {
    width: var(--card-width-390px);
    height: var(--card-height-390px);
  }

  .center {
    font-size: 30px;
  }

  .row-a,
  .row-b {
    gap: var(--card-gap-450px);
  }

  #controls {
    margin-top: 55vh;
  }
} */

@media (min-width: 600px) {
  .row-1,
  .row-2 {
    height: 35%;
  }

  #controls {
    margin-top: 33vh;
  }

  .top-left {
    top: -3%;
  }

  .center {
    font-size: 4em;
  }

  .bottom-right {
    bottom: -3%;
  }
}

@media (min-width: 700px) {
  .row-1,
  .row-2 {
    width: 95%;
    height: 40%;
  }

  #message {
    min-height: var(--minHeight-messageContainer-700px);
  }

  #controls {
    margin-top: 40vh;
  }
}

/* @media (min-width: 600px) {
  .row-1,
  .row-2 {
    margin: 10px 0px 30px;
  }

  .row-2 {
    gap: var(--card-gap-600px);
  }

  .row-1 {
    gap: calc(var(--card-width-600px) + var(--card-gap-600px) * 2);
  }

  .stock,
  .card-placeholder,
  .foundation,
  .card {
    min-width: var(--card-width-600px);
    min-height: var(--card-height-600px);
  }

  .center {
    font-size: 48px;
  }

  .row-a,
  .row-b {
    gap: var(--card-gap-600px);
  }

  #controls {
    margin-top: 55vh;
  }
} */

/* @media (min-width: 900px) {
  #message {
    min-height: var(--minHeight-messageContainer-1600px);
  }
  .row-1,
  .row-2 {
    margin: 10px 0px 30px;
  }

  .row-2 {
    gap: var(--card-gap-1200px);
  }

  .row-1 {
    gap: calc(var(--card-width-1200px) + var(--card-gap-1200px) * 2);
  }

  .stock,
  .card-placeholder,
  .foundation,
  .card {
    min-width: var(--card-width-1200px);
    min-height: var(--card-height-1200px);
    border-radius: var(--stock-borderRadius-900px);
  }

  .card-back,
  .stock {
    background: repeating-linear-gradient(
      45deg,
      #1a5a1a,
      #1a5a1a 10px,
      #165016 10px,
      #165016 20px
    );
    color: transparent !important;
  }

  .card-placeholder,
  .foundation {
    border: 5px dashed rgb(255, 255, 255);
  }

  .card {
    font-size: 18px;
  }

  .center {
    font-size: 90px;
  }

  .row-a,
  .row-b {
    gap: var(--card-gap-1200px);
  }

  #controls {
    margin-top: 45vh;
  }
} */

@media (min-width: 900px) {
  .row-1,
  .row-2 {
    width: 90%;
    height: 40%;
  }

  #controls {
    margin-top: 40vh;
  }
}

@media (min-width: 1000px) {
  .row-1,
  .row-2 {
    width: 90%;
    height: 50%;
  }

  #controls {
    margin-top: 40vh;
  }
}

@media (min-width: 1200px) {
  .row-1,
  .row-2 {
    width: 80%;
    height: 45%;
  }

  #controls {
    margin-top: 40vh;
  }

  .top-left {
    top: -3%;
  }

  .center {
    font-size: 5em;
  }

  .bottom-right {
    bottom: -3%;
  }
}

@media (min-width: 1300px) {
  .row-1,
  .row-2 {
    width: 76%;
    height: 50%;
  }

  #controls {
    margin-top: 40vh;
  }
}

@media (min-width: 1400px) {
  .row-1,
  .row-2 {
    width: 78%;
    height: 50%;
  }

  .row-a,
  .row-b,
  .row-2 {
    gap: 0.5em;
  }

  .row-b {
    width: calc((100% / 7) * 4 - 0.25em);
  }

  .row-a {
    width: calc((100% / 7) * 2 - 0.25em);
  }

  .row-1 {
    gap: 1em;
  }

  #controls {
    margin-top: 40vh;
  }
}

@media (min-width: 1500px) {
  .row-1,
  .row-2 {
    width: 72%;
    height: 50%;
  }

  .row-a,
  .row-b,
  .row-2 {
    gap: 0.7em;
  }

  .row-b {
    width: calc((100% / 7) * 4 - 0.35em);
  }

  .row-a {
    width: calc((100% / 7) * 2 - 0.35em);
  }

  #controls {
    margin-top: 40vh;
  }
}

/* @media (min-width: 1200px) {
  .info-container {
    margin-top: 10px;
  }

  .row-2 {
    gap: var(--card-gap-1200px);
  }

  .row-1 {
    gap: calc(var(--card-width-1200px) + var(--card-gap-1200px) * 2);
    margin-bottom: 10px;
  }

  .stock,
  .card-placeholder,
  .foundation,
  .card {
    min-width: var(--card-width-1200px);
    min-height: var(--card-height-1200px);
    border-radius: var(--stock-borderRadius-900px);
  }

  .card {
    font-size: 20px;
  }

  .center {
    font-size: 85px;
  }

  .row-a,
  .row-b {
    gap: var(--card-gap-1200px);
  }

  #controls {
    margin-top: 47vh;
  }
} */

@media (min-width: 1600px) {
  #game-container {
    margin-top: 5px;
    /* min-height: 80vh;
    max-height: 85vh; */
  }

  .row-1,
  .row-2 {
    margin: 5px 0px 20px;
  }

  /* .row-2 {
    gap: var(--card-gap-1200px);
  }

  .row-1 {
    gap: calc(var(--card-width-1600px) + var(--card-gap-1200px) * 2);
  } */

  .row-a,
  .row-b,
  .row-2 {
    gap: 0.7em;
  }

  .row-b {
    width: calc((100% / 7) * 4 - 0.35em);
  }

  .row-a {
    width: calc((100% / 7) * 2 - 0.35em);
  }

  .stock,
  .card-placeholder,
  .foundation,
  .card {
    min-width: var(--card-width-1600px);
    min-height: var(--card-height-1600px);
  }

  .card {
    font-size: 22px;
  }

  .center {
    /* margin: 40px 0px 40px; */
    font-size: 120px;
  }

  .row-a,
  .row-b {
    gap: 0.7em;
  }

  #controls {
    margin-top: 40vh;
  }
}

@media (min-width: 1900px) {
  .info-container {
    margin-bottom: 15px;
  }

  #game-container {
    margin-top: 5px;
    /* min-height: 80vh;
    max-height: 85vh; */
  }

  .row-1,
  .row-2 {
    margin: 5px 0px 20px;
  }

  .row-2 {
    gap: var(--card-gap-1200px);
  }

  .row-1 {
    gap: calc(var(--card-width-1600px) + var(--card-gap-1200px) * 2);
  }

  .stock,
  .card-placeholder,
  .foundation,
  .card {
    min-width: var(--card-width-1600px);
    min-height: var(--card-height-1600px);
    border-radius: 10px;
    box-sizing: border-box;
  }

  .card {
    font-size: 24px;
  }

  .center {
    font-size: 120px;
  }

  .row-a,
  .row-b {
    gap: var(--card-gap-1200px);
  }

  #controls {
    margin-top: 40vh;
  }
}
